{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "parentHash",
          "type": "bytes32"
        }
      ],
      "name": "Created",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "liker",
          "type": "address"
        }
      ],
      "name": "Liked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "Updated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "commentHashAt",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "body",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "parentHash",
          "type": "bytes32"
        }
      ],
      "name": "create",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "getPost",
      "outputs": [
        {
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "body",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "page",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "hashesOfAuthor",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "like",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "likerAt",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "numberOfCommentHashes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "author",
          "type": "address"
        }
      ],
      "name": "numberOfHashesOfAuthor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "numberOfLikers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "numberOfRevisions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "revisionAt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "body",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct Blog.Revision",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "body",
          "type": "string"
        }
      ],
      "name": "update",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0x5b8C253517b6Bd003369173109693B01cb6841B5",
    "contractAddress": null,
    "transactionIndex": 1,
    "gasUsed": "985901",
    "logsBloom": "0x
    "blockHash": "0xbc7b934c78f2bc795dfd9c6df6d2aa519f7feae131c68c952c4759b60a81f06d",
    "transactionHash": "0xd3883fc420c00be26680beaab33f572364b1c6306f48187558e753c4a6798230",
    "logs": [],
    "blockNumber": 22084046,
    "cumulativeGasUsed": "1017629",
    "status": 1,
    "byzantium": true
  },
  "address": "0xafdc9924faa2d4d788963fcc88a45001d9e34f41",
  "args": [],
  "solcInputHash": "0x36c263db1440ba9fac6d3cd90847b0382691520614cf7e76addfd584728062f6",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"parentHash\",\"type\":\"bytes32\"}],\"name\":\"Created\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liker\",\"type\":\"address\"}],\"name\":\"Liked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"Updated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"commentHashAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"body\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"parentHash\",\"type\":\"bytes32\"}],\"name\":\"create\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"getPost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"body\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"page\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"hashesOfAuthor\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"like\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"likerAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"numberOfCommentHashes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"}],\"name\":\"numberOfHashesOfAuthor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"numberOfLikers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"numberOfRevisions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"revisionAt\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"body\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct Blog.Revision\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"body\",\"type\":\"string\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Blog.sol\":\"Blog\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Blog.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.12;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"./libraries/Bytes32Pagination.sol\\\";\\n\\ncontract Blog {\\n    using Bytes32Pagination for bytes32[];\\n\\n    event Created(bytes32 hash, bytes32 parentHash);\\n    event Updated(bytes32 hash);\\n    event Liked(bytes32 hash, address liker);\\n\\n    struct Revision {\\n        string title;\\n        string body;\\n        uint256 createdAt;\\n    }\\n\\n    struct Post {\\n        bytes32 parentHash;\\n        address author;\\n        Revision[] revisions;\\n        bytes32[] commentHashes;\\n        address[] likers;\\n        uint256 updatedAt;\\n    }\\n\\n    mapping(address => bytes32[]) internal _hashesOfAuthor;\\n    mapping(bytes32 => Post) internal _postOfHash;\\n\\n    function getPost(bytes32 hash)\\n        public\\n        view\\n        returns (\\n            address author,\\n            string memory title,\\n            string memory body,\\n            uint256 updatedAt\\n        )\\n    {\\n        Post storage post = _postOfHash[hash];\\n        if (post.author == address(0)) {\\n            return (address(0), \\\"\\\", \\\"\\\", 0);\\n        } else {\\n            Revision storage latest = post.revisions[post.revisions.length - 1];\\n            return (post.author, latest.title, latest.body, post.updatedAt);\\n        }\\n    }\\n\\n    function numberOfRevisions(bytes32 hash) public view returns (uint256) {\\n        Post storage post = _postOfHash[hash];\\n        return post.revisions.length;\\n    }\\n\\n    function revisionAt(bytes32 hash, uint256 index) public view returns (Revision memory) {\\n        Post storage post = _postOfHash[hash];\\n        return post.revisions[index];\\n    }\\n\\n    function numberOfCommentHashes(bytes32 hash) public view returns (uint256) {\\n        Post storage post = _postOfHash[hash];\\n        return post.commentHashes.length;\\n    }\\n\\n    function commentHashAt(bytes32 hash, uint256 index) public view returns (bytes32) {\\n        Post storage post = _postOfHash[hash];\\n        return post.commentHashes[index];\\n    }\\n\\n    function numberOfLikers(bytes32 hash) public view returns (uint256) {\\n        Post storage post = _postOfHash[hash];\\n        return post.likers.length;\\n    }\\n\\n    function likerAt(bytes32 hash, uint256 index) public view returns (address) {\\n        Post storage post = _postOfHash[hash];\\n        return post.likers[index];\\n    }\\n\\n    function numberOfHashesOfAuthor(address author) public view returns (uint256) {\\n        return _hashesOfAuthor[author].length;\\n    }\\n\\n    function hashesOfAuthor(\\n        address author,\\n        uint256 page,\\n        uint256 limit\\n    ) public view returns (bytes32[] memory) {\\n        return _hashesOfAuthor[author].paginate(page, limit);\\n    }\\n\\n    function create(\\n        string memory title,\\n        string memory body,\\n        bytes32 parentHash\\n    ) public {\\n        require(bytes(title).length > 0, \\\"empty-title\\\");\\n        require(bytes(body).length > 0, \\\"empty-body\\\");\\n\\n        bytes32 hash =\\n            keccak256(abi.encodePacked(msg.sender, title, body, parentHash, block.number));\\n\\n        Post storage post = _postOfHash[hash];\\n        require(post.author == address(0), \\\"already-posted\\\");\\n        post.author = msg.sender;\\n        post.updatedAt = block.timestamp;\\n\\n        Revision storage revision = post.revisions.push();\\n        revision.title = title;\\n        revision.body = body;\\n        revision.createdAt = block.timestamp;\\n\\n        if (parentHash != bytes32(0)) {\\n            Post storage parentPost = _postOfHash[parentHash];\\n            require(parentPost.author != address(0), \\\"invalid-parent-hash\\\");\\n            parentPost.commentHashes.push(hash);\\n        }\\n\\n        emit Created(hash, parentHash);\\n    }\\n\\n    function update(\\n        bytes32 hash,\\n        string memory title,\\n        string memory body\\n    ) public {\\n        require(bytes(title).length > 0, \\\"empty-title\\\");\\n        require(bytes(body).length > 0, \\\"empty-body\\\");\\n\\n        Post storage post = _postOfHash[hash];\\n        require(post.author == msg.sender, \\\"not-author\\\");\\n        post.updatedAt = block.timestamp;\\n\\n        Revision storage revision = post.revisions.push();\\n        revision.title = title;\\n        revision.body = body;\\n        revision.createdAt = block.timestamp;\\n\\n        emit Updated(hash);\\n    }\\n\\n    function like(bytes32 hash) public {\\n        Post storage post = _postOfHash[hash];\\n        require(post.author != address(0), \\\"wrong-hash\\\");\\n\\n        for (uint256 i = 0; i < post.likers.length; i++) {\\n            if (post.likers[i] == msg.sender) {\\n                revert(\\\"already-liked\\\");\\n            }\\n        }\\n        post.likers.push(msg.sender);\\n\\n        emit Liked(hash, msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0x51d65732825a796d12328357918afc0e79ae45f81a77d487f60aeb18582be835\",\"license\":\"MIT\"},\"contracts/libraries/Bytes32Pagination.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity =0.6.12;\\n\\nlibrary Bytes32Pagination {\\n    function paginate(\\n        bytes32[] memory hashes,\\n        uint256 page,\\n        uint256 limit\\n    ) internal pure returns (bytes32[] memory result) {\\n        result = new bytes32[](limit);\\n        for (uint256 i = 0; i < limit; i++) {\\n            if (page * limit + i >= hashes.length) {\\n                result[i] = bytes32(0);\\n            } else {\\n                result[i] = hashes[page * limit + i];\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x7ec40eff569a29dd954523ccb36a92221f12a52d22be6ea0f2ffa3409dd59c79\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 51,
        "contract": "contracts/Blog.sol:Blog",
        "label": "_hashesOfAuthor",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)"
      },
      {
        "astId": 55,
        "contract": "contracts/Blog.sol:Blog",
        "label": "_postOfHash",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_struct(Post)46_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Revision)30_storage)dyn_storage": {
        "base": "t_struct(Revision)30_storage",
        "encoding": "dynamic_array",
        "label": "struct Blog.Revision[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bytes32[])",
        "numberOfBytes": "32",
        "value": "t_array(t_bytes32)dyn_storage"
      },
      "t_mapping(t_bytes32,t_struct(Post)46_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct Blog.Post)",
        "numberOfBytes": "32",
        "value": "t_struct(Post)46_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Post)46_storage": {
        "encoding": "inplace",
        "label": "struct Blog.Post",
        "members": [
          {
            "astId": 32,
            "contract": "contracts/Blog.sol:Blog",
            "label": "parentHash",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 34,
            "contract": "contracts/Blog.sol:Blog",
            "label": "author",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 37,
            "contract": "contracts/Blog.sol:Blog",
            "label": "revisions",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_struct(Revision)30_storage)dyn_storage"
          },
          {
            "astId": 40,
            "contract": "contracts/Blog.sol:Blog",
            "label": "commentHashes",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 43,
            "contract": "contracts/Blog.sol:Blog",
            "label": "likers",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 45,
            "contract": "contracts/Blog.sol:Blog",
            "label": "updatedAt",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Revision)30_storage": {
        "encoding": "inplace",
        "label": "struct Blog.Revision",
        "members": [
          {
            "astId": 25,
            "contract": "contracts/Blog.sol:Blog",
            "label": "title",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 27,
            "contract": "contracts/Blog.sol:Blog",
            "label": "body",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 29,
            "contract": "contracts/Blog.sol:Blog",
            "label": "createdAt",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "gasEstimates": {
    "creation": {
      "codeDepositCost": "862000",
      "executionCost": "896",
      "totalCost": "862896"
    },
    "external": {
      "commentHashAt(bytes32,uint256)": "2166",
      "create(string,string,bytes32)": "infinite",
      "getPost(bytes32)": "infinite",
      "hashesOfAuthor(address,uint256,uint256)": "infinite",
      "like(bytes32)": "infinite",
      "likerAt(bytes32,uint256)": "2150",
      "numberOfCommentHashes(bytes32)": "1200",
      "numberOfHashesOfAuthor(address)": "1323",
      "numberOfLikers(bytes32)": "1287",
      "numberOfRevisions(bytes32)": "1221",
      "revisionAt(bytes32,uint256)": "infinite",
      "update(bytes32,string,string)": "infinite"
    }
  }
}